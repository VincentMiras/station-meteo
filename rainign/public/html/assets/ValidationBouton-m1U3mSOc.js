import{_ as p,c as i,a,F as m,r as f,o as l,w as g,d as b,u as c,t as v,e as y,f as x}from"./index-C4MXbM_u.js";import{u as _,a as C}from"./DataStore-BG3aEKVQ.js";const k={class:"station-form"},S=["id","value"],V=["for"],D={__name:"ChoixStation",setup(h){const n=_();return(t,s)=>(l(),i("fieldset",k,[s[1]||(s[1]=a("legend",{class:"station-legend"},"Choisissez la/les station(s) à afficher :",-1)),(l(),i(m,null,f(["piensg027","piensg028","piensg030","piensg031","piensg032"],e=>a("div",{class:"station-option",key:e},[g(a("input",{type:"checkbox",id:e,value:e,"onUpdate:modelValue":s[0]||(s[0]=o=>c(n).station=o)},null,8,S),[[b,c(n).station]]),a("label",{for:e},v(e),9,V)])),64))]))}},F=p(D,[["__scopeId","data-v-a0594fb8"]]),$={class:"weather-form"},B=["id","value"],M=["for"],E={__name:"ChoixCapteur",setup(h){const n=_(),t=s=>({temperature:"Température",pressure:"Pression",humidity:"Humidité",rain:"Précipitations",luminosity:"Luminosité",wind_heading:"Direction du vent",wind_speed_avg:"Vitesse moyenne du vent",position:"Position"})[s]||s;return(s,e)=>(l(),i("fieldset",$,[e[1]||(e[1]=a("legend",{class:"weather-legend"},"Choisissez les mesures que vous souhaitez voir :",-1)),(l(),i(m,null,f(["temperature","pressure","humidity","rain","luminosity","wind_heading","wind_speed_avg","position"],o=>a("div",{class:"weather-option",key:o},[g(a("input",{type:"checkbox",id:o,value:o,"onUpdate:modelValue":e[0]||(e[0]=u=>c(n).selectedMeasures=u)},null,8,B),[[b,c(n).selectedMeasures]]),a("label",{for:o},v(t(o)),9,M)])),64))]))}},R=p(E,[["__scopeId","data-v-fda5a518"]]),L=["disabled"],P={__name:"ValidationBouton",setup(h){const n=x(),t=_(),s=C();let e=t.mode;const o=async()=>{console.log("Mesures sélectionnées :",t.queryParams),console.log("URL auto ?:",t.url_fetch);try{s.data=await w(t.url_fetch),console.log("Données récupérées:",s.data),n.push("/dashboard"+e)}catch(d){console.error("Une erreur s'est produite, impossible de récupérer les données",d)}},u=y(()=>t.mode==="sample"&&!t.startDate||t.selectedMeasures.length===0||t.station.length===0),w=async d=>{try{const r=await fetch(d);if(!r.ok)throw new Error("Erreur de récupération des données");return await r.json()}catch(r){throw console.error("Erreur lors de la récupération des données:",r),r}};return(d,r)=>(l(),i("button",{class:"validate-btn",onClick:o,disabled:u.value},"Valider",8,L))}},j=p(P,[["__scopeId","data-v-bab113fb"]]);export{R as C,j as V,F as a};
